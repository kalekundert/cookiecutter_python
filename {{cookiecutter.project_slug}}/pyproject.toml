[build-system]
requires = ["flit_core >=3.2,<4"]
build-backend = "flit_core.buildapi"

[project]
name = "{{ cookiecutter.project_slug}}"
authors = [
  {name = "{{ cookiecutter.full_name }}", email = "{{ cookiecutter.email }}"},
]
readme = 'README.md'
dynamic = ["version", "description"]
requires-python = "~={{ cookiecutter.python_version }}"
classifiers = [
  'Programming Language :: Python :: 3',
]
dependencies = [
]

[project.optional-dependencies]
test = [
  'pytest',
  'parametrize_from_file',
]
doc = [
  'sphinx',
  'sphinx_rtd_theme',
  'myst_parser',
  'autoclasstoc',
]
{% if cookiecutter.project_type == 'application' -%}
[project.scripts]
{{ cookiecutter.project_slug }} = "{{ cookiecutter.project_slug }}:main"
{%- endif %}
[project.urls]
'Documentation' = 'https://{{ cookiecutter.project_slug | replace("_", "-") }}.readthedocs.io/en/latest/'
'Version Control' = 'https://github.com/{{ cookiecutter.github_username }}/{{ cookiecutter.project_slug }}'
'Bug Tracker' = 'https://github.com/{{ cookiecutter.github_username }}/{{ cookiecutter.project_slug }}/issues'
'Continuous Integration' = 'https://github.com/{{ cookiecutter.github_username }}/{{ cookiecutter.project_slug }}/actions'
'Test Coverage' = 'https://app.codecov.io/github/{{ cookiecutter.github_username }}/{{ cookiecutter.project_slug }}'

[tool.ruff.lint]
select = ["F"]
ignore = ["F405", "F403"]

[tool.ruff.lint.per-file-ignores]
"__init__.py" = ["F401"]

[tool.pytest.ini_options]
addopts = "--doctest-modules --doctest-glob='*.rst'"
doctest_optionflags = 'NORMALIZE_WHITESPACE'

[tool.coverage.run]
branch = true
parallel = true
source = ['{{ cookiecutter.project_slug }}']

[tool.coverage.report]
exclude_lines = [
    "^\\s*raise AssertionError\\b",
    "^\\s*raise NotImplementedError\\b",
]

[tool.semantic_release]
version_variables = ['{{ cookiecutter.project_slug}}/__init__.py:__version__']
build_command = 'python -m pip install build && python -m build'
major_on_zero = false
